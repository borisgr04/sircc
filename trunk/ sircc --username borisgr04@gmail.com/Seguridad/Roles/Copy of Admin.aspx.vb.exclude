Imports System.Web.Services
Imports System.Data
Imports System.Web.Script.Services
Imports System.Linq
Partial Class Seguridad_Roles_Admin
    Inherits PaginaComun
    Dim obj As Usuarios = New Usuarios

    Sub PopulateRoleList(ByVal userName As String)

        ' RoleList.Items.Clear()

        Dim roleNames() As String
        Dim roleName As String

        roleNames = Roles.GetAllRoles()

        For Each roleName In roleNames

            Dim roleListItem As New ListItem
            roleListItem.Text = roleName
            roleListItem.Selected = Roles.IsUserInRole(userName, roleName)

            'RoleList.Items.Add(roleListItem)

        Next

    End Sub


    Sub Buscar()
        'CboMod.DataBind()
        Dim u As MembershipUser = Membership.GetUser(Me.TxtUserName.Text)
        If Not (u Is Nothing) Then
            'PopulateRoleList(TxtUserName.Text)
            obj.GetRecords(TxtUserName.Text)
            Dim objM As New DBMenu
            objM.GetOpcionesPorUser(Me.Tvw, TxtUserName.Text, CboMod.SelectedValue)
            'Throw New Exception(CboMod.SelectedValue)
            Me.btnAct.Visible = True
        Else
            Me.btnAct.Visible = False
        End If
    End Sub



    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load

        Me.Opcion = "Administración de Roles"
        Me.SetTitulo()
        cargarDatosFB()
        Me.btnAct.Visible = False

        If Not Page.IsPostBack Then

            If Not String.IsNullOrEmpty(Request("username")) Then
                TxtUserName.Text = Request("username")
                Buscar()
            End If


        End If

    End Sub


    Protected Sub btnAct_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnAct.Click
        Dim obj As New DBMenu
        Me.MsgResult.Text = obj.AsigPermisosAUser(Me.Tvw, Me.TxtUserName.Text)
        Me.MsgBox(Me.MsgResult, obj.lErrorG)
    End Sub

    Protected Function Logico(ByVal valor As Integer) As String
        Return (valor = 1)
    End Function

    Protected Sub GridView1_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles GridView1.SelectedIndexChanged
        Me.TxtUserName.Text = Me.GridView1.SelectedValue
        Buscar()
    End Sub

    Protected Sub CboMod_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles CboMod.SelectedIndexChanged
        Buscar()
    End Sub

    Sub cargarDatosFB()
        Dim lstCodigos = New List(Of KeyValuePair(Of String, String))()
        lstCodigos.Add(New KeyValuePair(Of String, String)("CU", "Cubana. "))
        lstCodigos.Add(New KeyValuePair(Of String, String)("IB", "Iberia. "))
        lstCodigos.Add(New KeyValuePair(Of String, String)("TP", "Tap Portugal. "))
        lstCodigos.Add(New KeyValuePair(Of String, String)("UX", "Air Europa. "))
        lstCodigos.Add(New KeyValuePair(Of String, String)("U1", "Air France. "))
        lstCodigos.Add(New KeyValuePair(Of String, String)("U2", "Air Belrlin. "))
        lstCodigos.Add(New KeyValuePair(Of String, String)("U3", "Air Derbis. "))
        
        cmbAerolineas.DataValueField = "key"
        cmbAerolineas.DataTextField = "value"
        cmbAerolineas.DataSource = lstCodigos
        cmbAerolineas.DataBind()


    End Sub
    Protected Sub BtnCargarRoles_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles BtnCargarRoles.Click

        Dim mn As New DBMenu
        mn.GenerarRoles()
        MsgResult.Text = "Se generarón los Roles"
        MsgBox(MsgResult, False)

    End Sub

    Protected Sub GridView1_RowCommand(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewCommandEventArgs) Handles GridView1.RowCommand

        Select Case e.CommandName
            Case "activar"
                Dim index As Integer = Convert.ToInt32(e.CommandArgument)
                Me.GridView1.SelectedIndex = index
                Dim User As String = GridView1.SelectedValue

                Membership.GetUser(User).IsApproved = Not Membership.GetUser(User).IsApproved
                Me.MsgResult.Text = "Cambio estado de usuario " + User
                MsgBox(MsgResult, False)
            Case "desbloquear"
                Dim index As Integer = Convert.ToInt32(e.CommandArgument)
                Me.GridView1.SelectedIndex = index
                Dim User As String = GridView1.SelectedValue

                Dim r As Boolean = Usuarios.Desbloquear(User)
                Me.MsgResult.Text = "Desbloqueo a usuario " + User
                MsgBox(MsgResult, r)
            Case "AdminDesktop"
                Dim index As Integer = Convert.ToInt32(e.CommandArgument)
                Me.GridView1.SelectedIndex = index
                Dim User As String = GridView1.SelectedValue

                Dim objter As New Terceros
                MsgResult.Text = objter.AdminDesktop(User)
                MsgBox(MsgResult, objter.lErrorG)
        End Select
        Me.GridView1.DataBind()


    End Sub


    Protected Sub ImageButton1_Click(ByVal sender As Object, ByVal e As System.Web.UI.ImageClickEventArgs) Handles ImageButton1.Click
        Buscar()
    End Sub





    <WebMethod()> _
    <ScriptMethod(ResponseFormat:=ResponseFormat.Json)> _
    Public Shared Function ObtieneNombres(ByVal prefixText As String) As String() 'As List(Of Terc)
        Dim obj As New Terceros
        Dim lerrorg As Boolean = False
        Dim datat As New DataTable
        datat = obj.GetRecords(prefixText)
        Dim items As List(Of String) = New List(Of String)
        'Dim items As List(Of Terc) = New List(Of Terc)
        Dim i As Integer
        Dim Sal As String

        If datat.Rows.Count > 0 Then

            For i = 0 To datat.Rows.Count - 1
                'Dim Sal As New Terc
                'Sal.Nit = datat.Rows(i).Item("Ide_Ter").ToString()
                'Sal.Nom = datat.Rows(i).Item("Nom_Ter").ToString()
                Sal = datat.Rows(i).Item("Nom_Ter").ToString()
                items.Add(Sal)
            Next i
        Else
            items.Clear()
        End If
        Return items.ToArray
    End Function

    <WebMethod()> _
   <ScriptMethod(ResponseFormat:=ResponseFormat.Json)> _
    Public Shared Function Mostrar(ByVal values As String) As String
        Return values.Replace(".", ";")
    End Function


    Class Terc
        Public Nit As String
        Public Nom As String

    End Class


    Protected Sub Button1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles Button1.Click
        Title = cmbAerolineas.SelectedValue
    End Sub
End Class


