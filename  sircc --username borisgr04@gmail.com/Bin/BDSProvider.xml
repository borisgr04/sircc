<?xml version="1.0"?>
<doc>
<assembly>
<name>
BDSProvider
</name>
</assembly>
<members>
<member name="P:BDSProvider.BDSProvider.Conexion">
	<summary>
 Establece o Retorna la Conexión
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:BDSProvider.BDSProvider.#ctor(System.String,System.String)">

 Crea una instancia del acceso a la base de datos.

 proveedor de base de datos.
 cadena de conexion.


</member><member name="M:BDSProvider.BDSProvider.Configurar(System.String@,System.String@)">

 Configura el acceso a la base de datos para su utilización.

 Si existe un error al cargar la configuración.
 es el nombre de la variable del proveedor de base de datos del archivo de configuracion
 es el nombre de la variable de la cadena de conexion del archivo de configuracion

</member><member name="M:BDSProvider.BDSProvider.Desconectar">
	<summary>
 Permite desconectarse de la base de datos.
 </summary>
	<remarks></remarks>
</member><member name="M:BDSProvider.BDSProvider.Conectar">
	<summary>
 Conecta con base de datos, previamente debe estar configurado el Provider
 </summary>
	<remarks></remarks>
</member><member name="M:BDSProvider.BDSProvider.CrearComando(System.String)">
	<summary>
 Crea un comando en base a una sentencia SQL.Ejemplo:
 SELECT * FROM Tabla WHERE campo1=@campo1, campo2=@campo2
 Guarda el comando para el seteo de parámetros y la posterior ejecución.
 La sentencia SQL con el formato: SENTENCIA [param = @param,]
 </summary>
	<param name="sentenciaSQL"></param>
	<remarks></remarks>
</member><member name="M:BDSProvider.BDSProvider.CrearComando(System.String,System.Data.CommandType)">
	<summary>
 Crea un comando en base a una sentencia SQL.Ejemplo:
 SELECT * FROM Tabla WHERE campo1=@campo1, campo2=@campo2
 Guarda el comando para el seteo de parámetros y la posterior ejecución.
 La sentencia SQL con el formato: SENTENCIA [param = @param,]
 </summary>
	<param name="sentenciaSQL"></param>
	<param name="Tipo"></param>
	<remarks></remarks>
</member><member name="M:BDSProvider.BDSProvider.AsignarParametroNulo(System.String)">
	<summary>
 
 Setea un parámetro como nulo del comando creado.

 El nombre del parámetro cuyo valor será nulo.
 </summary>
	<param name="nombre"></param>
	<remarks></remarks>
</member><member name="M:BDSProvider.BDSProvider.AsignarParametroCadena(System.String,System.String)">
	<summary>
 Asigna un parámetro de tipo cadena al comando creado.

 El nombre del parámetro.
 El valor del parámetro.
 </summary>
	<param name="nombre"></param>
	<param name="valor"></param>
	<remarks></remarks>
</member><member name="M:BDSProvider.BDSProvider.AsignarParametroEntero(System.String,System.Int32)">
	<summary>
 Asigna un parámetro de tipo entero al comando creado.

 El nombre del parámetro.
 El valor del parámetro.
 </summary>
	<param name="nombre"></param>
	<param name="valor"></param>
	<remarks></remarks>
</member><member name="M:BDSProvider.BDSProvider.AsignarParametroBooleano(System.String,System.Boolean)">
	<summary>
 Asigna un parámetro de tipo Lógico/Boolena al comando creado.

 El nombre del parámetro.
 El valor del parámetro.
 </summary>
	<param name="nombre"></param>
	<param name="valor"></param>
	<remarks></remarks>
</member><member name="M:BDSProvider.BDSProvider.AsignarParametroDecimal(System.String,System.Decimal)">
	<summary>
 Asigna un parámetro de tipo Decimal al comando creado.

 El nombre del parámetro.
 El valor del parámetro.
 </summary>
	<param name="nombre"></param>
	<param name="valor"></param>
	<remarks></remarks>
</member><member name="M:BDSProvider.BDSProvider.AsignarCualquierParametro(System.String,System.Object)">
	<summary>
 Asigna un parámetro  al comando creado.

 El nombre del parámetro.
 El valor del parámetro.
 </summary>
	<param name="nombre"></param>
	<param name="valor"></param>
	<remarks></remarks>
</member><member name="M:BDSProvider.BDSProvider.AsignarParametroByte(System.String,System.Byte[])">
	<summary>
 Asignar parametro Byte, debe sobreescribirse
 </summary>
	<param name="nombre"></param>
	<param name="valor"></param>
	<remarks></remarks>
</member><member name="M:BDSProvider.BDSProvider.EjecutarConsultaDataSet">
	<summary>
 '''
 Ejecuta la Consulta y lo devuelve en un DataSet

 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:BDSProvider.BDSProvider.EjecutarConsultaDataTable">
	<summary>
     '''
 Ejecuta la Consulta y lo devuelve en un Datatable

 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:BDSProvider.BDSProvider.AsignarParametro(System.String,System.String,System.String)">
	<summary>
 '''
 Asigna un parámetro al comando creado.

 El nombre del parámetro.
 El separador que será agregado al valor del parámetro.
 El valor del parámetro.
 </summary>
	<param name="nombre"></param>
	<param name="separador"></param>
	<param name="valor"></param>
	<remarks></remarks>
</member><member name="M:BDSProvider.BDSProvider.AsignarParametroFecha(System.String,System.DateTime)">
	<summary>
 '''
 Asigna un parámetro de tipo fecha al comando creado.

 El nombre del parámetro.
 El valor del parámetro.
 </summary>
	<param name="nombre"></param>
	<param name="valor"></param>
	<remarks></remarks>
</member><member name="M:BDSProvider.BDSProvider.EjecutarConsulta">
	<summary>
  '''
 Ejecuta el comando creado y retorna el resultado de la consulta.

 El resultado de la consulta.
 Si ocurre un error al ejecutar el comando.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:BDSProvider.BDSProvider.EjecutarEscalar">
	<summary>
 '''
 Ejecuta el comando creado y retorna un escalar.

 El escalar que es el resultado del comando.
 Si ocurre un error al ejecutar el comando.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:BDSProvider.BDSProvider.EjecutarComando">
	<summary>
 '''
 Ejecuta el comando creado.

 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:BDSProvider.BDSProvider.ComenzarTransaccion">
	<summary>
 '''
 Comienza una transacción en base a la conexion abierta.
 Todo lo que se ejecute luego de esta ionvocación estará
 dentro de una tranasacción.

 </summary>
	<remarks></remarks>
</member><member name="M:BDSProvider.BDSProvider.CancelarTransaccion">
	<summary>
 '''
 Cancela la ejecución de una transacción.
 Todo lo ejecutado entre ésta invocación y su
 correspondiente ComenzarTransaccion será perdido.


 </summary>
	<remarks></remarks>
</member><member name="M:BDSProvider.BDSProvider.ConfirmarTransaccion">
	<summary>
 '''
 Confirma todo los comandos ejecutados entre el ComanzarTransaccion
 y ésta invocación.

 </summary>
	<remarks></remarks>
</member><member name="T:BDSProvider.BDSProvider">
	<summary>
 CLASE PARA MANEJAR ADO.NET Con Cualquier Proveedor de Datos - Desarrollado BYA Systems, Ing. Boris Gonzalez Rivera
 </summary>
	<remarks></remarks>
</member><member name="M:BDSProvider.BaseDatosException.#ctor(System.String,System.Exception)">

 Construye una instancia en base a un mensaje de error y la una excepción original.

 El mensaje de error.
 La excepción original.

</member><member name="M:BDSProvider.BaseDatosException.#ctor(System.String)">

 Construye una instancia en base a un mensaje de error.

 El mensaje de error.

</member>
</members>
</doc>